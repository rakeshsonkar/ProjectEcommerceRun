{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, ALL_REVIEW_REQUEST, ALL_REVIEW_SUCCESS, ALL_REVIEW_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\"; // Get All Products\n\nexport const getProduct = (keyword = \"\", currentPage = 1, price = [0, 25000], category, ratings = 0) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\n\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\n    }\n\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get All Products For Admin\n\nexport const getAdminProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/admin/products\");\n    dispatch({\n      type: ADMIN_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Create Product\n\nexport const createProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Product\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get Products Details\n\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // NEW REVIEW\n\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get All Reviews of a Product\n\nexport const getAllReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`);\n    dispatch({\n      type: ALL_REVIEW_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete Review of a Product\n\nexport const deleteReviews = (reviewId, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/reviews?id=${reviewId}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clearing Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["C:/Users/DELL/Desktop/React project/mernProjectEcommerce/frontend/src/actions/productAction.js"],"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","ALL_REVIEW_REQUEST","ALL_REVIEW_SUCCESS","ALL_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getProduct","keyword","currentPage","price","category","ratings","dispatch","type","link","data","get","payload","error","response","message","getAdminProduct","products","createProduct","productData","config","headers","post","updateProduct","id","put","success","deleteProduct","delete","getProductDetails","product","newReview","reviewData","getAllReviews","reviews","deleteReviews","reviewId","productId","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  ALL_PRODUCT_FAIL,\r\n  ALL_PRODUCT_REQUEST,\r\n  ALL_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_REQUEST,\r\n  ADMIN_PRODUCT_SUCCESS,\r\n  ADMIN_PRODUCT_FAIL,\r\n  NEW_PRODUCT_REQUEST,\r\n  NEW_PRODUCT_SUCCESS,\r\n  NEW_PRODUCT_FAIL,\r\n  UPDATE_PRODUCT_REQUEST,\r\n  UPDATE_PRODUCT_SUCCESS,\r\n  UPDATE_PRODUCT_FAIL,\r\n  DELETE_PRODUCT_REQUEST,\r\n  DELETE_PRODUCT_SUCCESS,\r\n  DELETE_PRODUCT_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  NEW_REVIEW_REQUEST,\r\n  NEW_REVIEW_SUCCESS,\r\n  NEW_REVIEW_FAIL,\r\n  ALL_REVIEW_REQUEST,\r\n  ALL_REVIEW_SUCCESS,\r\n  ALL_REVIEW_FAIL,\r\n  DELETE_REVIEW_REQUEST,\r\n  DELETE_REVIEW_SUCCESS,\r\n  DELETE_REVIEW_FAIL,\r\n  CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\n// Get All Products\r\nexport const getProduct =\r\n  (keyword = \"\", currentPage = 1, price = [0, 25000], category, ratings = 0) =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: ALL_PRODUCT_REQUEST });\r\n\r\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\r\n\r\n      if (category) {\r\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\r\n      }\r\n\r\n      const { data } = await axios.get(link);\r\n\r\n      dispatch({\r\n        type: ALL_PRODUCT_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ALL_PRODUCT_FAIL,\r\n        payload: error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// Get All Products For Admin\r\nexport const getAdminProduct = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ADMIN_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/v1/admin/products\");\r\n\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_SUCCESS,\r\n      payload: data.products,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADMIN_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Create Product\r\nexport const createProduct = (productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/v1/admin/product/new`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NEW_PRODUCT_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Update Product\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/v1/admin/product/${id}`,\r\n      productData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: UPDATE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Product\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\r\n\r\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PRODUCT_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_PRODUCT_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get Products Details\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data.product,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// NEW REVIEW\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NEW_REVIEW_REQUEST });\r\n\r\n    const config = {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\r\n\r\n    dispatch({\r\n      type: NEW_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: NEW_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Get All Reviews of a Product\r\nexport const getAllReviews = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ALL_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\r\n\r\n    dispatch({\r\n      type: ALL_REVIEW_SUCCESS,\r\n      payload: data.reviews,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ALL_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Delete Review of a Product\r\nexport const deleteReviews = (reviewId, productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DELETE_REVIEW_REQUEST });\r\n\r\n    const { data } = await axios.delete(\r\n      `/api/v1/reviews?id=${reviewId}&productId=${productId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_REVIEW_SUCCESS,\r\n      payload: data.success,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REVIEW_FAIL,\r\n      payload: error.response.data.message,\r\n    });\r\n  }\r\n};\r\n\r\n// Clearing Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n  dispatch({ type: CLEAR_ERRORS });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}